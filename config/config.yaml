sso-proxy:
  port: 9900
  bindAddress: 0.0.0.0
  sessionSetting:
    maxAge: 1800  # seconds, session idle timeout
  iamBaseUrl: http://localhost:8080 # iam base url
  oidcAuthCallbackUrl: http://localhost:9900/auth/callback # 申请token的回调地址，IAM会回调该地址返回token
  globalPublicUris: # 不需要登录就可以调用的借口
    - "/auth"
    - "/auth/callback"
    - "/public/**"
    - "**.{js,json,jpg,ico,png}"
  oidcScopes:
    - openid
    - profile
    - email
  oidcClients:
    - realm: master
      clientId: sso-proxy  # client created in master realm and has service account enabled
      secret: eUGbBI99r9P3kg8bIVcykq7YMnU741JG
      providerUrlPrefix: ${iamBaseUrl}/realms/master

  authenticators:
    - type: keycloak
      name: keycloak-authenticator
      url: ${iamBaseUrl}
      syncClients:
        enabledOnStartup: true
        autoRegister: true #todo: 如果realm下没有sso-proxy,则是否自动注册
        registerSetting:
          clientId: sso-proxy
          name: sso-proxy
          generateSecret: true
          #          secret: test  #将generateSecret设置为false， 可以手段设置secret
          enabled: true
          standardFlowEnabled: true
          serviceAccountsEnabled: false
          webOrigin:
            - "*"
          redirectURIs:
            - "*"

        pageParam: #分页查询的参数设置, first, max
          first: 0
          max: 100

  apps:
    - appId: cloud-portal
      loginPage: http://localhost:8088/login
      homePage: http://localhost:8088/home
      grantType: authorization_code

  reverseProxy:
    urlPrefix: /proxy  # 代理请求的base uri
    httpTransport:
      timeout: 10  # seconds
      keepAlive: 20 # seconds
      maxIdleConnections: 100 # seconds
      idleConnectionTimeout: 20 # seconds
      tls:
        handShakeTimeout: 10 # seconds
        expectContinueTimeout: 1 # seconds
        insecureSkipVerify: true

    routes:
      # request path: /proxy/iam/**, 格式：${reverseProxy.urlPrefix}/${routes.serviceName}
      - serviceName: iam
        url: http://localhost:8088/login # the url of backend service
        mirrorRequest:
          enabled: false
        # forwardTo: http://www.baidu.com
        publicUris: # 未经登录就可以调用的uri
          - "**/realms/**/departments-resources/**"
        filters:
          - SetHeader: Host=www.baidu.com,X-Forwarded-Host=www.baidu.com
          - SetBearerToken: Bearer=iam.accessToken #iam.accessToken or openstack.accessToken

      - serviceName: echoTest
        url: http://localhost:9900/ # the url of backend service
        filters:
          - SetHeader: Host=www.baidu.com,X-Forwarded-Host=www.baidu.com
          - SetBearerToken: Bearer=iam.accessToken #iam.accessToken or openstack.accessToken

  enableDevFeatures: false
  logSetting:
    logLevel: INFO
    logPath: /var/log/sso-proxy
    outputToConsole: true
    fileName: sso-proxy.log
    maxSizeInMB: 30
    maxAgeInDay: 30
    maxBackups: 10
    compress: true